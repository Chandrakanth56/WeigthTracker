@page "/VendorDashboard"
@rendermode InteractiveServer
@inject ProtectedLocalStorage localStorage
@inject UserServices users
@inject HttpClient Http
@inject NavigationManager Navigation
@if (!IsFarmerDeatil && !IsVeiwWeightDetail)
{
    <div class="container-fluid bg-light min-vh-100 d-flex flex-column">
        <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom sticky-top shadow-sm">
            <div class="container">
                <div class="navbar-brand fw-bold d-flex align-items-center fs-5">
                    <i class="bi bi-truck text-primary me-2"></i>
                    <h2 class="text-primary">@VName</h2>
                </div>
                <div class="collapse navbar-collapse">
                    <div class="ms-auto d-flex align-items-center">
                        <a class="btn">
                            <div class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center"
                                 style="width:40px;height:40px;font-weight:600;">
                                @FirstLatter
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="container mt-4">
            @if (farmers == null)
            {
                <p>Loading farmers...</p>
            }
            else if (farmers.Count == 0)
            {
                <p>No farmers found.</p>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var farmer in farmers)
                    {
                        <div class="col-md-6 col-lg-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100 farmer-card">
                                <div class="card-body d-flex flex-column">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center me-3"
                                             style="width:60px;height:60px;font-size:24px;font-weight:600;">
                                            @farmer.FarmerName.Substring(0, 1).ToUpper()
                                        </div>
                                        <div>
                                            <h5 class="fw-bold mb-0">@farmer.FarmerName</h5>
                                            <small class="text-muted">Farmer ID: @farmer.FarmerId</small>
                                        </div>
                                    </div>
                                    <div class="mt-auto d-flex justify-content-between">
                                        <button class="btn btn-sm btn-outline-primary"
                                                @onclick="() => ViewDetails(farmer.FarmerId)">
                                            View Details
                                        </button>
                                        <button class="btn btn-sm btn-outline-success"
                                                @onclick="() => ViewWeightDetails(farmer.FarmerId)">
                                            View Weight Details
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    <style>
        .farmer-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .farmer-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            }
    </style>

}
else if(IsFarmerDeatil)
{
    <FarmerDetailComponent FarmerId="users.FarmerId"></FarmerDetailComponent>
}
else
{
    <WeightDetailComponent FarmerId="FarmerId" VendorId="VId" FarmerName="@FName"></WeightDetailComponent>
}



@code {
    private int VId;
    private int FarmerId;
    private string VName = string.Empty;
    private string FirstLatter = string.Empty;
    private string ExeptionMessage = string.Empty;
    private string FName = string.Empty;

    private bool IsFarmerDeatil;
    private bool IsVeiwWeightDetail;

    private List<Farmer>? farmers;

    protected override async Task OnInitializedAsync()
    {
        VName = users.VendorName;
        VId = users.VendorId;
        if (string.IsNullOrEmpty(VName))
        {
            FirstLatter = "";
        }
        else
        {
            FirstLatter = VName.Substring(0, 1).ToUpper();
        }
        farmers = await GetFarmersAsync();
    }


    protected async Task<List<Farmer>> GetFarmersAsync()
    {
        VName = users.VendorName.ToUpper();
        VId = users.VendorId;
        try
        {
            var response = await Http.GetFromJsonAsync<List<Farmer>>($"https://localhost:7123/api/Vendors/GetAllFarmer?VendorId={VId}");
            if (response == null || response.Count == 0)
            {
                return new List<Farmer>();
            }
            
            return response;
        }
        catch (Exception ex)
        {
            ExeptionMessage = $"Error: {ex.Message}";
            return new List<Farmer>();
        }
    }

    private void ViewWeightDetails(int farmerid)
    {
        IsVeiwWeightDetail = true;
        FarmerId = farmerid;
        users.FarmerId = farmerid;
        FName = farmers.FirstOrDefault(f => f.FarmerId == FarmerId)?.FarmerName ?? "";
    }

    private void ViewDetails(int farmerid)
    {
        FarmerId = farmerid;
        users.FarmerId = farmerid;
        IsFarmerDeatil = true;
    }



}
